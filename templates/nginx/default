[[ if (.Container.GetCustomValue "backends")]]
upstream loadBalancing {
    [[range (.Container.GetCustomValue "backends")]]
    server ${[[ . | ToUpper ]]_PORT_[[ ($.Collection.Get . ).GetFirstPort ]]_TCP_ADDR}:${[[ . | ToUpper ]]_PORT_[[ ($.Collection.Get . ).GetFirstPort ]]_TCP_PORT};
    [[end]]
}

server {
    listen [[ .Container.GetFirstLocalPort ]];
    server_name localhost;

    location / {
        proxy_pass http://loadBalancing;
    }
}
[[else]]
server {
    listen [[ .Container.GetFirstLocalPort ]];

    [[ $documentRoot := .Container.GetCustomValue "documentRoot" ]]
    [[ if $documentRoot ]]
    root [[ $documentRoot ]];
    [[ else ]]
    root /var/www;
    [[ end ]]
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    location / {
        try_files $uri $uri/ /index.html;
    }

    #error_page 404 /404.html;

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
           root /var/www;
    }

    [[ if (.Container.GetCustomValue "fastCgi")]]
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php(/|$) {
           fastcgi_split_path_info ^(.+\.php)(/.+)$;

           [[ $fastCgiName := (.Container.GetCustomValue "fastCgi")]]
           [[ $fastCgiPort := (.Collection.Get .Container.Custom.fastCgi ).GetFirstPort]]
           fastcgi_pass ${[[ $fastCgiName | ToUpper ]]_PORT_[[ $fastCgiPort ]]_TCP_ADDR}:${[[ $fastCgiName | ToUpper ]]_PORT_[[ $fastCgiPort ]]_TCP_PORT};
           fastcgi_index index.php;
           include fastcgi_params;
    }
    [[end]]

    # deny access to .htaccess files, if Apache's document root concurs with nginx's one
    location ~ /\.ht {
           deny all;
    }
}
[[end]]
